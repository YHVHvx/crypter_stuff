Карманная книжка по чистке. Часть 1 из 42.

NOD - сигнатуры/импорт, + количество функций и их порядок, убрать ntdll.dll из импорта, данные
Avast - сигнатуры в данных
VBA - эмуляция, поставил длинный цикл
GData - импорт, ругается на мультимедиа, поставить оптимизации
Panda - желательно присутствие user32.dll
Avira - желательно кодовубю секцию поставить на запись, добавить дебаг директорию !!!base64 сделать
Panda - сигнатуры/ЭНТРОПИЯ
KAV - разрежить код фейковыми DBGPRINT + импорт(иногда)
MSE - то же что KAV
BitDefender - прикопался к GetProcAddress (ntdll & kernel); Побольше импорта левого.


1.Если будет палиться NOD-ом, можно попробовать убрать оптимизации в свойствах StubNew: 
Проект->Свойства StubNew->C/C++->Оптимизация: Оптимизация - поставить "Отключено", Предпочитать размер или скорость - поставить "Никакой"
2.Если будет палить битдеф и друзья и если нужно срочно криптонуть, то можно в свойствах StubNew:
Проект->Свойства StubNew->Компоновщик->Отладка - поставить "Создавать отладочную информацию" - "Да", но будет палить один Аваст.
3. Можно играться с флагами в StubNew.h: DBG_FAKE, DBG_OK, TLS(будет заюзана TLS), ANTIDEBUG, PREDBG;
4. Можно убирать / добавлять фейк импорты в StubNew.cpp: InitInstance (там есть комментарии);
5. Можно менять точку входа на стабовую от MS (CRT) - EntryPoint менять на _tWinMain, соответственно убрав в свойствах StubNew:
Проект->Свойства StubNew->Компоновщик->Дополнительно->Точка Входа;
6. Можно заниматься перестановками импорта самому в свойствах StubNew: 
Проект->Свойства StubNew->Компоновщик->Ввод->Дополнительные зависимости
-----------------------------------------------------------------------------------------------------------------------------------------
SDK для разработчиков малвари, часть 1 из 4

1. Генерация трешкода после прохода моим морфером:
Метки:

__asm{hlt} _asm{cli} _asm{cld} 
....сколько угодно _asm{nop}


Все это будет заменено  "мусорным" кодом, единственно тут нужно учесть что это нельзя вставлять в длинные циклы,
т.к. этот треш морфленый (в основном арифметика) будет жрать процессорное время, хотя это очень полезно от эмуляторов,
например таких как VBA

Что это даст: сигнатуры в вашей начинке в памяти будут всегда разные от крипта к крипту. 
